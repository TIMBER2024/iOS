{"sources":{"test/samples/semicolon_in_string.sol":{"ast":{"absolutePath":"test/samples/semicolon_in_string.sol","exportedSymbols":{"Foo":[15]},"id":16,"license":null,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.6",".10"],"nodeType":"PragmaDirective","src":"0:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":15,"linearizedBaseContracts":[15],"name":"Foo","nodeType":"ContractDefinition","nodes":[{"body":{"id":13,"nodeType":"Block","src":"214:29:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"231:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"235:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"231:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8,"id":12,"nodeType":"Return","src":"224:12:0"}]},"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"43:115:0","text":"#if_succeeds {:msg \"P0\"} keccak256(\"ab;\") != bytes32(0x0);\n #if_succeeds {:msg \"P1\"} y == x + 1;"},"functionSelector":"2fbebd38","id":14,"implemented":true,"kind":"function","modifiers":[],"name":"foo","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","overrides":null,"scope":14,"src":"176:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"176:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"175:11:0"},"returnParameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","overrides":null,"scope":14,"src":"203:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"202:11:0"},"scope":15,"src":"163:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":16,"src":"24:221:0"}],"src":"0:246:0","sourceEntryKey":"test/samples/semicolon_in_string.sol"},"id":0,"source":"pragma solidity 0.6.10;\ncontract Foo {\n    /// #if_succeeds {:msg \"P0\"} keccak256(\"ab;\") != bytes32(0x0);\n    ///\n    /// #if_succeeds {:msg \"P1\"} y == x + 1;\n    function foo(uint256 x) public returns (uint256 y) {\n        return x + 1;\n    }\n}\n"}},"compilerVersion":"0.6.10"}